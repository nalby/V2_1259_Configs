#####################################################################
#   Macros
#####################################################################


[include /home/pi/klipper_config/nozzle_scrub.cfg]

# Conditional G28
[gcode_macro CG28]
gcode:
   STATUS_HOMING
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

[gcode_macro RESET_EXTRUDER]
gcode:
    G92 E0 ; reset extruder  

[gcode_macro PURGE_LINE]
gcode:
    { action_respond_info("Prime Line...") }
    M117 Prime Line
    G92 E0;
    G90
    G0 X90 Y8 F6000                     ; Go to X3 Y3
    G1 Z0.2 F200                        ; Set nozzle height
    G91
    G1 X120 E30 F1200;                  ; intro line
    G1 Y1                               ; move Y 1
    G1 X-120 E30 F1200;                 ; intro line
    G92 E0.0                            ; reset extrusion distance
    G1 Z1 F5000                         ; Lift Z   


[gcode_macro LED_OFF]
gcode: 
  SET_PIN PIN=caselight VALUE=0

[gcode_macro LED_ON]
gcode: 
  SET_PIN PIN=caselight VALUE=0.5



#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Screw_tilt_adjust if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Heating Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    SET_FAN_SPEED FAN=Nevermore SPEED=0.7                     # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
    G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  quad_gantry_level               # Levels the buildplate via QGL
  G28 Z                           # Homes Z again after QGL

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  BED_MESH_CALIBRATE                 # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLY_TEXT MSG= "Purgeing"
  STATUS_READY
  VORON_PURGE
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  #G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  #G0 Z0.4                                          # Raises Z to 0.4
  #G91                                              # Incremental positioning 
  #G1 X100 E20 F1000                                # Purge line
  #G90                                              # Absolut position


[gcode_macro G32]
gcode:
       STATUS_LEVELING
       BED_MESH_CLEAR
       G28
       QUAD_GANTRY_LEVEL
       G28
       G0 X150 Y150 Z30 F3600

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    {% set FILAMENT = params.FILAMENT|default(PLA) %}  
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-3.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing

    TURN_OFF_HEATERS
    M107                             ; turn off fan
    G1 Z2 F3000                      ; move nozzle up 2mm
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y} F3600   ; park nozzle at rear
    BED_MESH_CLEAR
    STATUS_PART_READY

    M117 Cleaning
    STATUS_CLEANING
    CLEAN_NOZZLE

    G0 X150 Y300 Z30 F3600

    #{% if FILAMENT == 'ABS' or params.FILAMENT == 'ASA' %}
    #NEVERMORE_END_PRINT
    #{% endif %}

    STATUS_OFF
    LED_OFF
    #SET_FAN_SPEED FAN=Nevermore SPEED=0.0
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    M117 Nevermore Delay

    M117 Print Complete
    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  PRINT_END
  BASE_CANCEL_PRINT


[gcode_macro PREHEAT_ABS]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=250
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110

[gcode_macro PREHEAT_PLA]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=220
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60    
    

[gcode_macro M600]
 #default_parameter_X: 30 ;purge buccket location
 #default_parameter_Y: 307 ;purge buccket location
 #default_parameter_Z: 2.5 ;purge buccket location
gcode:
  {% set X = params.X|default(30)|int %}
  {% set Y = params.X|default(307)|int %}
  {% set Z = params.X|default(2.5)|int %}
  M400
  SAVE_GCODE_STATE NAME=M600
  PAUSE
  G91
  G1 Z20 F900 ;Raise Z away from print
  G90
  G1 X{X} Y{Y} F3000 ;Move to purge bucket
  SAVE_GCODE_STATE NAME=FIRSTMOVE
  G1 Z{Z} F2000 ;Move to purge bucket
  G91
  G1 E-120 F9000 ;Unload filament
  RESTORE_GCODE_STATE NAME=M600

[gcode_macro LOAD]
gcode:
 SAVE_GCODE_STATE NAME=LOAD
 G91
 G1 E82 F900 ;Load filament
 CLEAN_NOZZLE
 RESTORE_GCODE_STATE NAME=LOAD
 SET_IDLE_TIMEOUT TIMEOUT=7200

[gcode_macro UNPAUSE]
gcode:
 RESTORE_GCODE_STATE NAME=FIRSTMOVE MOVE=1
 RESUME

[gcode_macro CenterBed]
gcode:
 G28
 G0 X150 Y150 Z50


[gcode_macro _PURGE_LINE]
gcode:
  STATUS_CLEANING
  M118 purge line
  G1 Z5.0 F3000    # move z up little to prevent scratching of surface
  G1 X0.1 Y2 Z0.3 F5000.0    # move to start-line position
  G1 X0.1 Y10.0 Z0.3 F500.0 E15    # draw 1st line
  G1 X0.4 Y10.0 Z0.3 F5000.0    # move to side a little
  G1 X0.4 Y2 Z0.3 F500.0 E30    # draw 2nd line
  G1 Z5.0 F3000    # move z up little to prevent scratching of surface

[gcode_macro Shaper]
gcode:
  g28
  SHAPER_CALIBRATE

# Make BambuStudio happy
[gcode_macro G17]
gcode:

[gcode_macro M981]
gcode:

[gcode_macro M1003]
gcode:

[gcode_macro G3]
gcode:
